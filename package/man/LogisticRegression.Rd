% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.r
\docType{class}
\name{LogisticRegression}
\alias{LogisticRegression}
\title{LogisticRegression Class}
\description{
Implements a multinomial logistic regression model using R6.
}
\note{
The \code{handle_missing_values} method must be called after initializing the model using the \code{new} method.
Automatically select target variable

Automatically selects the target variable based on entropy and correlation thresholds.

The \code{target_select} method must be called after initializing the model using the \code{new} method.
Prepare data for modeling

Prepares the dataset by defining the target variable, removing specified columns, encoding categorical variables, normalizing numerical variables, and splitting the data into training and testing sets.

The \code{prepare_data} method must be called after initializing the model using the \code{new} method.
Fit the Logistic Regression Model

Adjusts the model coefficients using gradient descent.

The \code{fit} method must be called after preparing the data using the \code{prepare_data} method.
Calculate variable importance for Logistic Regression Model

Calculates the importance scores of the variables (predictors) based on the coefficients of a fitted logistic regression model.

The \code{var_importance} method must be called after fitting the model using the \code{fit} method.
Variable selection based on importance or threshold

Selects variables (predictors) for the logistic regression model based on their importance scores or a specified threshold. 
This helps in reducing the model complexity by keeping only the most important predictors.

The \code{var_select} method must be called after calculating variable importance using the \code{var_importance} method.
Predict function for Logistic Regression Model

This function makes predictions on the test data using the fitted logistic regression model. 
It calculates the scores for each class, applies the softmax function to obtain class probabilities, 
and predicts the class with the highest probability. The accuracy of the model is then calculated based on the predictions.

The \code{predict} method must be called after fitting the model using the \code{fit} method.
Predict class probabilities

Computes the predicted probabilities for each class using the softmax function applied to the logistic regression model's coefficients and test data.
}
\section{Methods}{

\describe{
 \item{\code{initialize}}{Initializes the \code{LogisticRegression} class by loading data from a specified file.}
 \item{\code{handle_missing_values}}{Handles missing values in the dataset using specified methods for numerical and categorical variables.}
 \item{\code{target_select}}{Automatically selects the target variable based on entropy and correlation thresholds.}
 \item{\code{prepare_data}}{Prepares the data for modeling by defining the target variable, removing specified columns, encoding categorical variables, normalizing numerical variables, and splitting the data into training and testing sets.}
 \item{\code{fit}}{Fits the logistic regression model using gradient descent.}
 \item{\code{var_importance}}{Calculates the importance of variables based on the coefficients of the fitted model.}
 \item{\code{var_select}}{Selects predictor variables based on their importance scores or a specified threshold.}
 \item{\code{predict}}{Makes predictions on the test data using the fitted model and calculates the model's accuracy.}
 \item{\code{predict_proba}}{Calculates the predicted probabilities for each class using the softmax function applied to the model's coefficients and test data.}
 \item{\code{actual_labels}}{Converts the actual class indices to their corresponding class labels.}
 \item{\code{predictions_to_labels}}{Converts the predicted class indices to their corresponding class labels.}
 \item{\code{generate_confusion_matrix}}{Generates a confusion matrix and calculates performance metrics such as precision, recall, and F1-score for each class.}
 \item{\code{summary}}{Displays a summary of the logistic regression model, including the number of observations, predictors, classes, class labels, class frequencies, and model coefficients.}
 \item{\code{print}}{Displays basic information about the logistic regression model, including the number of classes, predictors, class labels, and coefficients if available.}
}
}

\examples{
# Initialization of the model
model <- LogisticRegression$new(file_path = "path/to/your/data.extention", delimiter = "delimiter")

## ------------------------------------------------
## Method `LogisticRegression$new`
## ------------------------------------------------

\dontrun{
# Initialization of the model
model <- LogisticRegression$new(file_path = "path/to/your/data.extention", delimiter = "delimiter")
}
Handle missing values in the dataset

Processes missing values in the dataset using specified methods for numerical and categorical variables.


## ------------------------------------------------
## Method `LogisticRegression$handle_missing_values`
## ------------------------------------------------

\dontrun{
# Handle missing values by replacing numerical NAs with mean and categorical NAs with mode
model$handle_missing_values(num_method = "mean", cat_method = "mode")
}


## ------------------------------------------------
## Method `LogisticRegression$target_select`
## ------------------------------------------------

\dontrun{
# Automatically select target with specified thresholds
model$target_select(entropy_threshold = 0.5, correlation_threshold = 0.3, weight_entropy = 0.7, weight_correlation = 0.3)
}


## ------------------------------------------------
## Method `LogisticRegression$prepare_data`
## ------------------------------------------------

\dontrun{
# Prepare the data with a specified target, columns to remove, and test size
model$prepare_data(target = "target_column", columns_to_remove = c("feature1", "feature2", "feature3"), test_size = 0.3)
}


## ------------------------------------------------
## Method `LogisticRegression$fit`
## ------------------------------------------------

\dontrun{
# Fit the model with specified hyperparameters
model$fit(learning_rate = 0.01, max_iter = 1000, batch_size = 50, tol = 0.001)
}


## ------------------------------------------------
## Method `LogisticRegression$var_importance`
## ------------------------------------------------

\dontrun{
# Calculate variable importance for a fitted model
importance <- model$var_importance()

# View the importance of the variables
print(importance)
}


## ------------------------------------------------
## Method `LogisticRegression$var_select`
## ------------------------------------------------

\dontrun{
# Select variables based on importance threshold
model$var_select(threshold = 0.05)

# Select the top 10 most important variables
model$var_select(num_vars = 10)
}


## ------------------------------------------------
## Method `LogisticRegression$predict`
## ------------------------------------------------

\dontrun{
# Make predictions on the test set
accuracy <- model$predict()

# Print the accuracy of the model on the test data
print(accuracy)
}


## ------------------------------------------------
## Method `LogisticRegression$predict_proba`
## ------------------------------------------------

\dontrun{
# Predict probabilities for the test set
probabilities <- model$predict_proba()

# Print the predicted probabilities
print(probabilities)
}
Convert actual class indices to class labels

Maps numeric class indices from the actual outputs to their corresponding class labels.


## ------------------------------------------------
## Method `LogisticRegression$actual_labels`
## ------------------------------------------------

\dontrun{
# Convert actual class indices to labels
actual_labels <- model$actual_labels()

# View the first few actual labels
print(head(actual_labels))
}
Convertpredicted classes to class labels

Maps numeric class indices from the predicted outputs to their corresponding class labels.


## ------------------------------------------------
## Method `LogisticRegression$predictions_to_labels`
## ------------------------------------------------

\dontrun{
# Convert predicted class indices to labels
predicted_labels <- model$predictions_to_labels()

# View the first few predicted labels
print(head(predicted_labels))
}
Generate Confusion Matrix and Performance Metrics

Generates a confusion matrix based on actual and predicted labels and calculates key performance metrics such as accuracy, precision, recall, and F1-score for each class.


## ------------------------------------------------
## Method `LogisticRegression$generate_confusion_matrix`
## ------------------------------------------------

\dontrun{
# Generate a confusion matrix and performance metrics
results <- model$generate_confusion_matrix()
print(results$confusion_matrix)
print(results$accuracy)
}
Summary of the Logistic Regression Model

Prints a summary of the logistic regression model, including the number of observations, predictors, classes, class labels, class frequencies, and model coefficients.


## ------------------------------------------------
## Method `LogisticRegression$summary`
## ------------------------------------------------

\dontrun{
# Print the model summary
model$summary()
}
Print basics informations about the Logistic Regression Model

Prints basic information about the logistic regression model, including the number of observations, predictors, classes, class labels, class frequencies, and model coefficients.


## ------------------------------------------------
## Method `LogisticRegression$print`
## ------------------------------------------------

\dontrun{
# Print the model information
model$print()
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{data}}{Data frame containing the raw data loaded from the specified file.}

\item{\code{missing_values}}{List or vector indicating missing values in each column.}

\item{\code{missing_values_percent}}{Percentage of missing values per column.}

\item{\code{cols_names}}{Character vector containing the names of all columns in the dataset.}

\item{\code{cat_cols_names}}{Character vector containing the names of categorical columns.}

\item{\code{target}}{Character indicating the name of the target variable for regression.}

\item{\code{predictors}}{Character vector containing the names of predictor variables used for the model.}

\item{\code{X}}{Matrix of predictor variables used for model training.}

\item{\code{y}}{Vector of target variable labels corresponding to the observations.}

\item{\code{n}}{Total number of observations in the dataset.}

\item{\code{X_train}}{Matrix of predictor variables for the training set.}

\item{\code{y_train}}{Vector of target variable labels for the training set.}

\item{\code{X_test}}{Matrix of predictor variables for the test set.}

\item{\code{y_test}}{Vector of target variable labels for the test set.}

\item{\code{predicted_targets}}{Data frame containing the classes predicted by the model on the test set.}

\item{\code{accuracy}}{Numeric value indicating the accuracy of the model on the test set.}

\item{\code{coefficients}}{Vector or matrix containing the coefficients of the logistic regression model.}

\item{\code{levels_map}}{List or vector mapping the levels of the encoded categorical variables.}

\item{\code{class_labels}}{Character vector containing the labels of the different classes.}

\item{\code{class_frequencies}}{Vector or table indicating the frequency of each class in the training data.
Initialize Logistic Regression Model

Initializes the \code{LogisticRegression} class by loading data from a specified file.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LogisticRegression-new}{\code{LogisticRegression$new()}}
\item \href{#method-LogisticRegression-handle_missing_values}{\code{LogisticRegression$handle_missing_values()}}
\item \href{#method-LogisticRegression-target_select}{\code{LogisticRegression$target_select()}}
\item \href{#method-LogisticRegression-prepare_data}{\code{LogisticRegression$prepare_data()}}
\item \href{#method-LogisticRegression-fit}{\code{LogisticRegression$fit()}}
\item \href{#method-LogisticRegression-var_importance}{\code{LogisticRegression$var_importance()}}
\item \href{#method-LogisticRegression-var_select}{\code{LogisticRegression$var_select()}}
\item \href{#method-LogisticRegression-predict}{\code{LogisticRegression$predict()}}
\item \href{#method-LogisticRegression-predict_proba}{\code{LogisticRegression$predict_proba()}}
\item \href{#method-LogisticRegression-actual_labels}{\code{LogisticRegression$actual_labels()}}
\item \href{#method-LogisticRegression-predictions_to_labels}{\code{LogisticRegression$predictions_to_labels()}}
\item \href{#method-LogisticRegression-generate_confusion_matrix}{\code{LogisticRegression$generate_confusion_matrix()}}
\item \href{#method-LogisticRegression-summary}{\code{LogisticRegression$summary()}}
\item \href{#method-LogisticRegression-print}{\code{LogisticRegression$print()}}
\item \href{#method-LogisticRegression-clone}{\code{LogisticRegression$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LogisticRegression-new"></a>}}
\if{latex}{\out{\hypertarget{method-LogisticRegression-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogisticRegression$new(file_path, delimiter)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{file_path}}{Character. The path to the data file (CSV or Excel).}

\item{\code{delimiter}}{Character. The delimiter used in the CSV file (e.g., "," for comma).}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Initialization of the model
model <- LogisticRegression$new(file_path = "path/to/your/data.extention", delimiter = "delimiter")
}
Handle missing values in the dataset

Processes missing values in the dataset using specified methods for numerical and categorical variables.

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LogisticRegression-handle_missing_values"></a>}}
\if{latex}{\out{\hypertarget{method-LogisticRegression-handle_missing_values}{}}}
\subsection{Method \code{handle_missing_values()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogisticRegression$handle_missing_values(
  num_method = c("none", "mean", "median", "mode", "remove"),
  cat_method = c("none", "mode", "remove")
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{num_method}}{Character. Method to handle missing numerical values. Options are:
\itemize{
  \item \code{"none"}: Do not handle missing values.
  \item \code{"mean"}: Replace missing values with the mean of the column.
  \item \code{"median"}: Replace missing values with the median of the column.
  \item \code{"mode"}: Replace missing values with the mode of the column.
  \item \code{"remove"}: Remove rows with missing numerical values.
}}

\item{\code{cat_method}}{Character. Method to handle missing categorical values. Options are:
\itemize{
  \item \code{"none"}: Do not handle missing values.
  \item \code{"mode"}: Replace missing values with the mode of the column.
  \item \code{"remove"}: Remove rows with missing categorical values.
}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly updates the dataset by handling missing values.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Handle missing values by replacing numerical NAs with mean and categorical NAs with mode
model$handle_missing_values(num_method = "mean", cat_method = "mode")
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LogisticRegression-target_select"></a>}}
\if{latex}{\out{\hypertarget{method-LogisticRegression-target_select}{}}}
\subsection{Method \code{target_select()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogisticRegression$target_select(
  entropy_threshold = 0.5,
  correlation_threshold = 0.5,
  weight_entropy = 0.5,
  weight_correlation = 0.5
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entropy_threshold}}{Numeric. Threshold for entropy to consider a variable as a potential target.}

\item{\code{correlation_threshold}}{Numeric. Threshold for correlation to filter out highly correlated variables.}

\item{\code{weight_entropy}}{Numeric. Weight assigned to entropy in the selection criteria.}

\item{\code{weight_correlation}}{Numeric. Weight assigned to correlation in the selection criteria.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
returns the name of the selected target variable.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Automatically select target with specified thresholds
model$target_select(entropy_threshold = 0.5, correlation_threshold = 0.3, weight_entropy = 0.7, weight_correlation = 0.3)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LogisticRegression-prepare_data"></a>}}
\if{latex}{\out{\hypertarget{method-LogisticRegression-prepare_data}{}}}
\subsection{Method \code{prepare_data()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogisticRegression$prepare_data(target, columns_to_remove, test_size)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{target}}{Character. The name of the target variable.}

\item{\code{columns_to_remove}}{Character vector. Names of columns to remove from the predictors.}

\item{\code{test_size}}{Numeric. Proportion of the dataset to include in the test split (e.g., 0.3 for 30%).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns the prepared data and updates the model attributes.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Prepare the data with a specified target, columns to remove, and test size
model$prepare_data(target = "target_column", columns_to_remove = c("feature1", "feature2", "feature3"), test_size = 0.3)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LogisticRegression-fit"></a>}}
\if{latex}{\out{\hypertarget{method-LogisticRegression-fit}{}}}
\subsection{Method \code{fit()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogisticRegression$fit(learning_rate, max_iter, batch_size, tol)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{learning_rate}}{Numeric. The learning rate for gradient descent.}

\item{\code{max_iter}}{Integer. The maximum number of iterations.}

\item{\code{batch_size}}{Integer. The size of each mini-batch.}

\item{\code{tol}}{Numeric. The tolerance for convergence.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns the fitted coefficients.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Fit the model with specified hyperparameters
model$fit(learning_rate = 0.01, max_iter = 1000, batch_size = 50, tol = 0.001)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LogisticRegression-var_importance"></a>}}
\if{latex}{\out{\hypertarget{method-LogisticRegression-var_importance}{}}}
\subsection{Method \code{var_importance()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogisticRegression$var_importance()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This function calculates the importance of each predictor variable by taking the absolute values of the coefficients (excluding the intercept). 
The sum of these absolute values for each variable is used as a measure of importance. Optionally, the scores are normalized by dividing by the total sum of importance scores.
The variables are then sorted in descending order of importance.
}

\subsection{Returns}{
A data frame with two columns:
- \code{Variable}: The name of each predictor variable.
- \code{Importance}: The normalized importance score for each variable.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Calculate variable importance for a fitted model
importance <- model$var_importance()

# View the importance of the variables
print(importance)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LogisticRegression-var_select"></a>}}
\if{latex}{\out{\hypertarget{method-LogisticRegression-var_select}{}}}
\subsection{Method \code{var_select()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogisticRegression$var_select(threshold = 0.05, num_vars = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{threshold}}{Numeric value (default: 0.05). The minimum importance score a variable must have to be selected. 
If `num_vars` is provided, this argument is ignored.}

\item{\code{num_vars}}{Integer (default: NULL). The exact number of most important variables to select. If provided, 
the function will select the top `num_vars` based on their importance scores.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
This function uses the importance scores of the variables calculated by the `var_importance` function to filter out 
less important variables. The selection can either be based on a minimum importance threshold or by selecting a fixed 
number of top variables.

- If `num_vars` is specified, the function selects the top `num_vars` variables based on their importance score.
- If `threshold` is provided, the function selects variables whose importance is greater than or equal to the threshold.

After selecting the variables, it reduces the `X_train` and `X_test` datasets to the selected variables and updates the 
`predictors` attribute.
}

\subsection{Returns}{
A character vector containing the names of the selected variables.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Select variables based on importance threshold
model$var_select(threshold = 0.05)

# Select the top 10 most important variables
model$var_select(num_vars = 10)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LogisticRegression-predict"></a>}}
\if{latex}{\out{\hypertarget{method-LogisticRegression-predict}{}}}
\subsection{Method \code{predict()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogisticRegression$predict()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The function returns the accuracy of the model on the test data.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Make predictions on the test set
accuracy <- model$predict()

# Print the accuracy of the model on the test data
print(accuracy)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LogisticRegression-predict_proba"></a>}}
\if{latex}{\out{\hypertarget{method-LogisticRegression-predict_proba}{}}}
\subsection{Method \code{predict_proba()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogisticRegression$predict_proba()}\if{html}{\out{</div>}}
}

\subsection{Details}{
The `predict_proba` function calculates the probabilities for each class for the input test data (`X_test`) using the softmax function. It includes the following steps:
- Adds an intercept term to the test data.
- Computes the raw scores (logits) by multiplying the input data with the model's coefficients.
- Applies the softmax function to convert logits into probabilities.
}

\subsection{Returns}{
A matrix of predicted probabilities, where each row corresponds to a sample and each column corresponds to a class.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Predict probabilities for the test set
probabilities <- model$predict_proba()

# Print the predicted probabilities
print(probabilities)
}
Convert actual class indices to class labels

Maps numeric class indices from the actual outputs to their corresponding class labels.

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LogisticRegression-actual_labels"></a>}}
\if{latex}{\out{\hypertarget{method-LogisticRegression-actual_labels}{}}}
\subsection{Method \code{actual_labels()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogisticRegression$actual_labels()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This function takes the actual class indices (stored in \code{self$y_test}) and maps them to their corresponding class labels (stored in \code{self$class_labels}).
The mapping is achieved by indexing \code{self$class_labels} with the actual class indices (incremented by 1 to account for R's 1-based indexing).
}

\subsection{Returns}{
A data frame containing the actual class labels.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Convert actual class indices to labels
actual_labels <- model$actual_labels()

# View the first few actual labels
print(head(actual_labels))
}
Convertpredicted classes to class labels

Maps numeric class indices from the predicted outputs to their corresponding class labels.

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LogisticRegression-predictions_to_labels"></a>}}
\if{latex}{\out{\hypertarget{method-LogisticRegression-predictions_to_labels}{}}}
\subsection{Method \code{predictions_to_labels()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogisticRegression$predictions_to_labels()}\if{html}{\out{</div>}}
}

\subsection{Details}{
This function takes the predicted class indices (stored in \code{self$predicted_targets}) and maps them to their corresponding class labels (stored in \code{self$class_labels}).
The mapping is achieved by indexing \code{self$class_labels} with the predicted class indices (incremented by 1 to account for R's 1-based indexing).
}

\subsection{Returns}{
A data frame containing the predicted class labels.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Convert predicted class indices to labels
predicted_labels <- model$predictions_to_labels()

# View the first few predicted labels
print(head(predicted_labels))
}
Generate Confusion Matrix and Performance Metrics

Generates a confusion matrix based on actual and predicted labels and calculates key performance metrics such as accuracy, precision, recall, and F1-score for each class.

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LogisticRegression-generate_confusion_matrix"></a>}}
\if{latex}{\out{\hypertarget{method-LogisticRegression-generate_confusion_matrix}{}}}
\subsection{Method \code{generate_confusion_matrix()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogisticRegression$generate_confusion_matrix()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list containing:
\describe{
  \item{\code{confusion_matrix}}{Confusion matrix as a table.}
  \item{\code{accuracy}}{Numeric value indicating the model's accuracy.}
  \item{\code{precision}}{Numeric vector indicating precision for each class.}
  \item{\code{recall}}{Numeric vector indicating recall for each class.}
  \item{\code{f1_score}}{Numeric vector indicating F1-score for each class.}
}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Generate a confusion matrix and performance metrics
results <- model$generate_confusion_matrix()
print(results$confusion_matrix)
print(results$accuracy)
}
Summary of the Logistic Regression Model

Prints a summary of the logistic regression model, including the number of observations, predictors, classes, class labels, class frequencies, and model coefficients.

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LogisticRegression-summary"></a>}}
\if{latex}{\out{\hypertarget{method-LogisticRegression-summary}{}}}
\subsection{Method \code{summary()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogisticRegression$summary()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
None. Prints the summary to the console.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Print the model summary
model$summary()
}
Print basics informations about the Logistic Regression Model

Prints basic information about the logistic regression model, including the number of observations, predictors, classes, class labels, class frequencies, and model coefficients.

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LogisticRegression-print"></a>}}
\if{latex}{\out{\hypertarget{method-LogisticRegression-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogisticRegression$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
None. The method prints information to the console.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
# Print the model information
model$print()
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LogisticRegression-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LogisticRegression-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LogisticRegression$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
